---
title: The big homework
date: 2025-01-21 16:06:41
tags:
---
#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <string.h>
#include <io.h>
#include<assert.h>
typedef struct Node
{
    char symbol;
    struct Node *left;
    struct Node *right;
 
    
}Node;

void copy(string filename)
{
    char a[20]={“filename”};
    fopen("fileone","w");
    char b[20]={“fileone”};
    char ch;
    FILE *fp1,*fp2;

    if((fp1=fopen(a,"r"))==NULL){
        printf("打开错误");
        exit(0);
    }
    while((ch=fgetc(fp1))!=EOF){
        fputc(ch,fp2);
    }
    fclose(“filename”);
    fclose("fileone");

    system("pause");
    system("cls");
}

void delete(string &filename)
{
    const char *file=filename;
    int result=_unlink(file);
    if(result==0)
    printf("文件删除成功");
    else
    perror("删除失败");
    return 0;
}

void compressFile(const char *inputFile, const char *outputFile, Code *codes) {
    FILE *in = fopen(inputFile, "r");
    FILE *out = fopen(outputFile, "wb"); 

    assert(in && "Failed to open input file.");
    assert(out && "Failed to open output file.");

    char ch;
    while ((ch = fgetc(in)) != EOF) {

        fwrite(codes[ch].code, sizeof(char), strlen(codes[ch].code), out);
    }

    fclose(in);
    fclose(out);
}

void decompressFile(const char *inputFile, const char *outputFile, Node *root) {
    FILE *in = fopen(inputFile, "rb"); 
    FILE *out = fopen(outputFile, "w");

    assert(in && "Failed to open input file.");
    assert(out && "Failed to open output file.");

    char bit;
    Node *current = root;
    while ((bit = fgetc(in)) != EOF) {
        current = (bit == '0') ? current->left : current->right;
        if (!current->left && !current->right) {
            fputc(current->symbol, out);
            current = root;
        }
    }

    fclose(in);
    fclose(out);
}


 int main() {

    while (1) {
        printf("请选择您想要进行的操作:\n");
        printf("1---cp. 复制文件\n");
        printf("2---rm. 删除文件\n");
        printf("3---tar. 压缩文件\n");
        printf("4---tarz. 解压文件\n");
        printf("请输入选项: ");
        int choice;
        scanf("%d", &choice);
        switch (choice) {
            case 1:
                printf("请输入文件名: ");
                scanf("%s", string filename);
                copy(filename);
                break;
 
            case 2:
                printf("请输入文件名: ");
                scanf("%s", filename);
                delete(&filename);
                break;
 
            case 3:
                printf("请输入文件名: ");
                scanf("%s", filename);
                const char *a=filename;
                fopen("filez","w");
                const char *b=filez;
                Node *root=NULL;
               compressFile(a,b,root);
                break;
 
            case 4:
                printf("请输入文件名: ");
                scanf("%s", filename);
                 const char *a=filename;
                 fopen("filez","w");
                const char *b=filez;
                Node *root=NULL;
               decompressFile(a,b,root);
                break;

            default:
                printf("无效的选项。\n");
                break;
        }
    }
 
    return 0;
}
  